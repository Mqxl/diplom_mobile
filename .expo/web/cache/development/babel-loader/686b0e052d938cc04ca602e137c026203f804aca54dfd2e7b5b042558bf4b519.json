{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useCallback } from \"react\";\nimport Main from \"./components/Main\";\nimport * as Font from 'expo-font';\nimport * as SplashScreen from 'expo-splash-screen';\nimport { Provider } from 'react-redux';\nimport { store } from \"./redux/store\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction App() {\n  var _Font$useFonts = Font.useFonts({\n      \"Roboto-Regular\": require(\"./assets/fonts/Roboto-Regular.ttf\"),\n      \"Roboto-Medium\": require(\"./assets/fonts/Roboto-Medium.ttf\")\n    }),\n    _Font$useFonts2 = _slicedToArray(_Font$useFonts, 1),\n    fontsLoaded = _Font$useFonts2[0];\n  var onLayoutRootView = useCallback(_asyncToGenerator(function* () {\n    if (fontsLoaded) {\n      yield SplashScreen.hideAsync();\n    }\n  }), [fontsLoaded]);\n  if (!fontsLoaded) {\n    return null;\n  }\n  return _jsx(Provider, {\n    store: store,\n    children: _jsx(Main, {})\n  });\n}\nexport default App;","map":{"version":3,"names":["React","useCallback","Main","Font","SplashScreen","Provider","store","jsx","_jsx","App","_Font$useFonts","useFonts","require","_Font$useFonts2","_slicedToArray","fontsLoaded","onLayoutRootView","_asyncToGenerator","hideAsync","children"],"sources":["C:/Users/Meruem/Desktop/diplom_project/App.js"],"sourcesContent":["import React, { useCallback } from \"react\";\r\n\r\nimport Main from \"./components/Main\";\r\n\r\nimport * as Font from 'expo-font';\r\nimport * as SplashScreen from 'expo-splash-screen';\r\n\r\nimport { Provider } from 'react-redux';\r\nimport { store } from \"./redux/store\";\r\nfunction App()\r\n{\r\n  const [fontsLoaded] = Font.useFonts({\r\n    \"Roboto-Regular\": require(\"./assets/fonts/Roboto-Regular.ttf\"),\r\n    \"Roboto-Medium\": require(\"./assets/fonts/Roboto-Medium.ttf\"),\r\n  });\r\n\r\n  const onLayoutRootView = useCallback(async () => {\r\n    if (fontsLoaded) {\r\n      await SplashScreen.hideAsync();\r\n    }\r\n  }, [fontsLoaded]);\r\n\r\n  if (!fontsLoaded) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <Provider store={store}>\r\n      <Main />\r\n    </Provider>\r\n)}\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,WAAW,QAAQ,OAAO;AAE1C,OAAOC,IAAI;AAEX,OAAO,KAAKC,IAAI,MAAM,WAAW;AACjC,OAAO,KAAKC,YAAY,MAAM,oBAAoB;AAElD,SAASC,QAAQ,QAAQ,aAAa;AACtC,SAASC,KAAK;AAAwB,SAAAC,GAAA,IAAAC,IAAA;AACtC,SAASC,GAAGA,CAAA,EACZ;EACE,IAAAC,cAAA,GAAsBP,IAAI,CAACQ,QAAQ,CAAC;MAClC,gBAAgB,EAAEC,OAAO,oCAAoC,CAAC;MAC9D,eAAe,EAAEA,OAAO,mCAAmC;IAC7D,CAAC,CAAC;IAAAC,eAAA,GAAAC,cAAA,CAAAJ,cAAA;IAHKK,WAAW,GAAAF,eAAA;EAKlB,IAAMG,gBAAgB,GAAGf,WAAW,CAAAgB,iBAAA,CAAC,aAAY;IAC/C,IAAIF,WAAW,EAAE;MACf,MAAMX,YAAY,CAACc,SAAS,CAAC,CAAC;IAChC;EACF,CAAC,GAAE,CAACH,WAAW,CAAC,CAAC;EAEjB,IAAI,CAACA,WAAW,EAAE;IAChB,OAAO,IAAI;EACb;EAEA,OACEP,IAAA,CAACH,QAAQ;IAACC,KAAK,EAAEA,KAAM;IAAAa,QAAA,EACrBX,IAAA,CAACN,IAAI,IAAE;EAAC,CACA,CAAC;AACd;AAED,eAAeO,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}