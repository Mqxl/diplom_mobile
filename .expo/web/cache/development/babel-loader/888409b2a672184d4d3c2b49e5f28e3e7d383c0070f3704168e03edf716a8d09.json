{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { BarChart } from 'react-native-chart-kit';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar MessagesScreen = function MessagesScreen() {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    loading = _useState2[0],\n    setLoading = _useState2[1];\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    data = _useState4[0],\n    setData = _useState4[1];\n  var _useState5 = useState(null),\n    _useState6 = _slicedToArray(_useState5, 2),\n    error = _useState6[0],\n    setError = _useState6[1];\n  useEffect(function () {\n    fetchData();\n  }, []);\n  var fetchData = function () {\n    var _ref = _asyncToGenerator(function* () {\n      setLoading(true);\n      try {\n        var response = yield fetch('https://dummyjson.com/products');\n        var json = yield response.json();\n        console.log(json);\n        setData(json[\"products\"]);\n        setLoading(false);\n      } catch (error) {\n        setError(error);\n        setLoading(false);\n      }\n    });\n    return function fetchData() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  var renderItem = function renderItem(_ref2) {\n    var item = _ref2.item;\n    return _jsx(TouchableOpacity, {\n      onPress: function onPress() {\n        return handleItemClick(item);\n      },\n      children: _jsx(View, {\n        style: styles.item,\n        children: _jsx(Text, {\n          children: item.title\n        })\n      })\n    });\n  };\n  var handleItemClick = function handleItemClick(item) {\n    console.log('Item clicked:', item);\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.title,\n      children: \"\\u0421\\u043E\\u043E\\u0431\\u0449\\u0435\\u043D\\u0438\\u044F\"\n    }), _jsx(Button, {\n      title: \"\\u041E\\u0431\\u043D\\u043E\\u0432\\u0438\\u0442\\u044C\",\n      onPress: fetchData\n    }), loading ? _jsx(ActivityIndicator, {\n      size: \"large\",\n      color: \"#0000ff\"\n    }) : null, _jsx(FlatList, {\n      data: data,\n      renderItem: renderItem,\n      keyExtractor: function keyExtractor(item) {\n        return item.id.toString();\n      },\n      style: {\n        width: '100%'\n      }\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#fff'\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 20\n  },\n  item: {\n    padding: 10,\n    borderBottomWidth: 1,\n    borderBottomColor: '#ccc'\n  }\n});\nexport default MessagesScreen;","map":{"version":3,"names":["React","useState","useEffect","View","Text","StyleSheet","Button","ActivityIndicator","FlatList","TouchableOpacity","BarChart","jsx","_jsx","jsxs","_jsxs","MessagesScreen","_useState","_useState2","_slicedToArray","loading","setLoading","_useState3","_useState4","data","setData","_useState5","_useState6","error","setError","fetchData","_ref","_asyncToGenerator","response","fetch","json","console","log","apply","arguments","renderItem","_ref2","item","onPress","handleItemClick","children","style","styles","title","container","size","color","keyExtractor","id","toString","width","create","flex","justifyContent","alignItems","backgroundColor","fontSize","fontWeight","marginBottom","padding","borderBottomWidth","borderBottomColor"],"sources":["C:/Users/Meruem/Desktop/diplom_project/screens/main/MessagesScreen.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { View, Text, StyleSheet, Button, ActivityIndicator, FlatList, TouchableOpacity } from 'react-native';\r\nimport { BarChart } from 'react-native-chart-kit';\r\n\r\nconst MessagesScreen = () => {\r\n    const [loading, setLoading] = useState(false);\r\n    const [data, setData] = useState([]);\r\n    const [error, setError] = useState(null);\r\n\r\n    useEffect(() => {\r\n        fetchData();\r\n    }, []);\r\n\r\n    const fetchData = async () => {\r\n        setLoading(true);\r\n        try {\r\n            const response = await fetch('https://dummyjson.com/products');\r\n            const json = await response.json();\r\n            console.log(json);\r\n            setData(json[\"products\"]);\r\n            setLoading(false);\r\n        } catch (error) {\r\n            setError(error);\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const renderItem = ({ item }) => (\r\n        <TouchableOpacity onPress={() => handleItemClick(item)}>\r\n            <View style={styles.item}>\r\n                <Text>{item.title}</Text>\r\n                {/* Add other fields you want to display */}\r\n            </View>\r\n        </TouchableOpacity>\r\n    );\r\n\r\n    const handleItemClick = (item) => {\r\n        // Handle item click, you can navigate to detail screen or do something else\r\n        console.log('Item clicked:', item);\r\n    };\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            <Text style={styles.title}>Сообщения</Text>\r\n            <Button title=\"Обновить\" onPress={fetchData} />\r\n            {loading ? <ActivityIndicator size=\"large\" color=\"#0000ff\" /> : null}\r\n            {/*{error && <Text>An error occurred: {error.message}</Text>}*/}\r\n            <FlatList\r\n                data={data}\r\n                renderItem={renderItem}\r\n                keyExtractor={(item) => item.id.toString()} // Assuming each item has an 'id' field\r\n                style={{ width: '100%' }}\r\n            />\r\n        </View>\r\n    );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        backgroundColor: '#fff',\r\n    },\r\n    title: {\r\n        fontSize: 24,\r\n        fontWeight: 'bold',\r\n        marginBottom: 20,\r\n    },\r\n    item: {\r\n        padding: 10,\r\n        borderBottomWidth: 1,\r\n        borderBottomColor: '#ccc',\r\n    },\r\n});\r\n\r\nexport default MessagesScreen;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,MAAA;AAAA,OAAAC,iBAAA;AAAA,OAAAC,QAAA;AAAA,OAAAC,gBAAA;AAEnD,SAASC,QAAQ,QAAQ,wBAAwB;AAAC,SAAAC,GAAA,IAAAC,IAAA,EAAAC,IAAA,IAAAC,KAAA;AAElD,IAAMC,cAAc,GAAG,SAAjBA,cAAcA,CAAA,EAAS;EACzB,IAAAC,SAAA,GAA8Bf,QAAQ,CAAC,KAAK,CAAC;IAAAgB,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAtCG,OAAO,GAAAF,UAAA;IAAEG,UAAU,GAAAH,UAAA;EAC1B,IAAAI,UAAA,GAAwBpB,QAAQ,CAAC,EAAE,CAAC;IAAAqB,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAA7BE,IAAI,GAAAD,UAAA;IAAEE,OAAO,GAAAF,UAAA;EACpB,IAAAG,UAAA,GAA0BxB,QAAQ,CAAC,IAAI,CAAC;IAAAyB,UAAA,GAAAR,cAAA,CAAAO,UAAA;IAAjCE,KAAK,GAAAD,UAAA;IAAEE,QAAQ,GAAAF,UAAA;EAEtBxB,SAAS,CAAC,YAAM;IACZ2B,SAAS,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,IAAMA,SAAS;IAAA,IAAAC,IAAA,GAAAC,iBAAA,CAAG,aAAY;MAC1BX,UAAU,CAAC,IAAI,CAAC;MAChB,IAAI;QACA,IAAMY,QAAQ,SAASC,KAAK,CAAC,gCAAgC,CAAC;QAC9D,IAAMC,IAAI,SAASF,QAAQ,CAACE,IAAI,CAAC,CAAC;QAClCC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;QACjBV,OAAO,CAACU,IAAI,CAAC,UAAU,CAAC,CAAC;QACzBd,UAAU,CAAC,KAAK,CAAC;MACrB,CAAC,CAAC,OAAOO,KAAK,EAAE;QACZC,QAAQ,CAACD,KAAK,CAAC;QACfP,UAAU,CAAC,KAAK,CAAC;MACrB;IACJ,CAAC;IAAA,gBAZKS,SAASA,CAAA;MAAA,OAAAC,IAAA,CAAAO,KAAA,OAAAC,SAAA;IAAA;EAAA,GAYd;EAED,IAAMC,UAAU,GAAG,SAAbA,UAAUA,CAAAC,KAAA;IAAA,IAAMC,IAAI,GAAAD,KAAA,CAAJC,IAAI;IAAA,OACtB7B,IAAA,CAACH,gBAAgB;MAACiC,OAAO,EAAE,SAAAA,QAAA;QAAA,OAAMC,eAAe,CAACF,IAAI,CAAC;MAAA,CAAC;MAAAG,QAAA,EACnDhC,IAAA,CAACT,IAAI;QAAC0C,KAAK,EAAEC,MAAM,CAACL,IAAK;QAAAG,QAAA,EACrBhC,IAAA,CAACR,IAAI;UAAAwC,QAAA,EAAEH,IAAI,CAACM;QAAK,CAAO;MAAC,CAEvB;IAAC,CACO,CAAC;EAAA,CACtB;EAED,IAAMJ,eAAe,GAAG,SAAlBA,eAAeA,CAAIF,IAAI,EAAK;IAE9BN,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEK,IAAI,CAAC;EACtC,CAAC;EAED,OACI3B,KAAA,CAACX,IAAI;IAAC0C,KAAK,EAAEC,MAAM,CAACE,SAAU;IAAAJ,QAAA,GAC1BhC,IAAA,CAACR,IAAI;MAACyC,KAAK,EAAEC,MAAM,CAACC,KAAM;MAAAH,QAAA,EAAC;IAAS,CAAM,CAAC,EAC3ChC,IAAA,CAACN,MAAM;MAACyC,KAAK,EAAC,kDAAU;MAACL,OAAO,EAAEb;IAAU,CAAE,CAAC,EAC9CV,OAAO,GAAGP,IAAA,CAACL,iBAAiB;MAAC0C,IAAI,EAAC,OAAO;MAACC,KAAK,EAAC;IAAS,CAAE,CAAC,GAAG,IAAI,EAEpEtC,IAAA,CAACJ,QAAQ;MACLe,IAAI,EAAEA,IAAK;MACXgB,UAAU,EAAEA,UAAW;MACvBY,YAAY,EAAE,SAAAA,aAACV,IAAI;QAAA,OAAKA,IAAI,CAACW,EAAE,CAACC,QAAQ,CAAC,CAAC;MAAA,CAAC;MAC3CR,KAAK,EAAE;QAAES,KAAK,EAAE;MAAO;IAAE,CAC5B,CAAC;EAAA,CACA,CAAC;AAEf,CAAC;AAED,IAAMR,MAAM,GAAGzC,UAAU,CAACkD,MAAM,CAAC;EAC7BP,SAAS,EAAE;IACPQ,IAAI,EAAE,CAAC;IACPC,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE,QAAQ;IACpBC,eAAe,EAAE;EACrB,CAAC;EACDZ,KAAK,EAAE;IACHa,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE,MAAM;IAClBC,YAAY,EAAE;EAClB,CAAC;EACDrB,IAAI,EAAE;IACFsB,OAAO,EAAE,EAAE;IACXC,iBAAiB,EAAE,CAAC;IACpBC,iBAAiB,EAAE;EACvB;AACJ,CAAC,CAAC;AAEF,eAAelD,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}