{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { addPost, getAllPosts, getOwnPosts, getPostCommnets } from \"./postsOperations\";\nvar initialState = {\n  items: [],\n  allItems: [],\n  comments: [],\n  isLoading: false,\n  error: null\n};\nvar postsSlice = createSlice({\n  name: 'posts',\n  initialState: initialState,\n  extraReducers: function extraReducers(builder) {\n    return builder.addCase(getOwnPosts.pending, function (state, action) {\n      state.isLoading = true;\n    }).addCase(getOwnPosts.fulfilled, function (state, action) {\n      state.isLoading = false;\n      state.error = null;\n      state.items = action.payload;\n    }).addCase(getOwnPosts.rejected, function (state, action) {\n      state.error = action.payload;\n    }).addCase(getAllPosts.pending, function (state, action) {\n      state.isLoading = true;\n    }).addCase(getAllPosts.fulfilled, function (state, action) {\n      state.isLoading = false;\n      state.error = null;\n      state.allItems = action.payload;\n    }).addCase(getAllPosts.rejected, function (state, action) {\n      state.error = action.payload;\n    }).addCase(addPost.pending, function (state, action) {\n      state.isLoading = true;\n    }).addCase(addPost.fulfilled, function (state, action) {\n      state.isLoading = false;\n      state.items.push(action.payload);\n    }).addCase(addPost.rejected, function (state, action) {\n      state.isLoading = false;\n      state.error = action.payload;\n    }).addCase(getPostCommnets.pending, function (state, action) {\n      state.isLoading = true;\n    }).addCase(getPostCommnets.fulfilled, function (state, action) {\n      state.isLoading = false;\n      state.comments = action.payload;\n    }).addCase(getPostCommnets.rejected, function (state, action) {\n      state.isLoading = false;\n      state.error = action.payload;\n    });\n  }\n});\nexport var postsReducer = postsSlice.reducer;","map":{"version":3,"names":["createSlice","addPost","getAllPosts","getOwnPosts","getPostCommnets","initialState","items","allItems","comments","isLoading","error","postsSlice","name","extraReducers","builder","addCase","pending","state","action","fulfilled","payload","rejected","push","postsReducer","reducer"],"sources":["C:/Users/Meruem/Desktop/diplom_project/redux/posts/postsReducer.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\n\r\nimport { addPost, getAllPosts, getOwnPosts, getPostCommnets } from \"./postsOperations\";\r\n\r\nconst initialState = {\r\n  items: [],\r\n  allItems: [],\r\n  comments: [],\r\n  isLoading: false,\r\n  error: null,\r\n};\r\n\r\nconst postsSlice = createSlice({\r\n  name: 'posts',\r\n  initialState,\r\n  extraReducers: (builder) =>\r\n    builder\r\n      .addCase(getOwnPosts.pending, (state, action) => {\r\n        state.isLoading = true;\r\n      })\r\n      .addCase(getOwnPosts.fulfilled, (state, action) => {\r\n        state.isLoading = false;\r\n        state.error = null;\r\n        state.items = action.payload;\r\n      })\r\n      .addCase(getOwnPosts.rejected, (state, action) => {\r\n        state.error = action.payload;\r\n      })\r\n      .addCase(getAllPosts.pending, (state, action) => {\r\n        state.isLoading = true;\r\n      })\r\n      .addCase(getAllPosts.fulfilled, (state, action) => {\r\n        state.isLoading = false;\r\n        state.error = null;\r\n        state.allItems = action.payload;\r\n      })\r\n      .addCase(getAllPosts.rejected, (state, action) => {\r\n        state.error = action.payload;\r\n      })\r\n      .addCase(addPost.pending, (state, action) => {\r\n        state.isLoading = true;\r\n      })\r\n      .addCase(addPost.fulfilled, (state, action) => {\r\n        state.isLoading = false;\r\n        state.items.push(action.payload);\r\n      })\r\n      .addCase(addPost.rejected, (state, action) => {\r\n        state.isLoading = false;\r\n        state.error = action.payload;\r\n      })\r\n      .addCase(getPostCommnets.pending, (state, action) => {\r\n        state.isLoading = true;\r\n      })\r\n      .addCase(getPostCommnets.fulfilled, (state, action) => {\r\n        state.isLoading = false;\r\n        state.comments = action.payload;\r\n      })\r\n      .addCase(getPostCommnets.rejected, (state, action) => {\r\n        state.isLoading = false;\r\n        state.error = action.payload;\r\n      }),\r\n});\r\n\r\nexport const postsReducer = postsSlice.reducer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}