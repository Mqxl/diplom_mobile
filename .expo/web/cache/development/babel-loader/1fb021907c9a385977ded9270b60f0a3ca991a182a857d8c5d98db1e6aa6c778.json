{"ast":null,"code":"import AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { initializeAuth, getReactNativePersistence } from \"firebase/auth/react-native\";\nimport { initializeApp } from \"firebase/app\";\nimport { getStorage } from 'firebase/storage';\nimport { initializeFirestore } from \"firebase/firestore\";\nvar firebaseConfig = {\n  apiKey: \"AIzaSyCyovJsAQb9WK-i9ltAWUvAoGHAAxvDj2o\",\n  authDomain: \"yffjfyuf.firebaseapp.com\",\n  projectId: \"yffjfyuf\",\n  storageBucket: \"yffjfyuf.appspot.com\",\n  messagingSenderId: \"695251726060\",\n  appId: \"1:695251726060:web:ee3833579a48ded913ffc9\",\n  measurementId: \"G-HRD902XRPX\"\n};\nvar app = initializeApp(firebaseConfig);\nexport var db = initializeFirestore(app, {\n  experimentalForceLongPolling: true\n});\nexport var auth = initializeAuth(app, {\n  persistence: getReactNativePersistence(AsyncStorage)\n});\nexport var storage = getStorage(app);\nexport default app;","map":{"version":3,"names":["AsyncStorage","initializeAuth","getReactNativePersistence","initializeApp","getStorage","initializeFirestore","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","app","db","experimentalForceLongPolling","auth","persistence","storage"],"sources":["C:/Users/Meruem/Desktop/diplom_project/firebase/config.js"],"sourcesContent":["import AsyncStorage from \"@react-native-async-storage/async-storage\"; // Импортируем AsyncStorage из пакета @react-native-async-storage/async-storage для работы с асинхронным хранилищем данных.\r\n\r\nimport { \r\n  initializeAuth, \r\n  getReactNativePersistence \r\n} from \"firebase/auth/react-native\"; // Импортируем функции initializeAuth и getReactNativePersistence из модуля \"firebase/auth/react-native\" для инициализации аутентификации и получения настроек сохранения данных для React Native.\r\n\r\nimport { \r\n  initializeApp \r\n} from \"firebase/app\"; // Импортируем функцию initializeApp из модуля \"firebase/app\" для инициализации приложения Firebase.\r\n\r\nimport { \r\n  getStorage \r\n} from 'firebase/storage'; // Импортируем функцию getStorage из модуля 'firebase/storage' для получения ссылки на хранилище Firebase.\r\n\r\nimport { \r\n  initializeFirestore \r\n} from \"firebase/firestore\"; // Импортируем функцию initializeFirestore из модуля \"firebase/firestore\" для инициализации Firestore.\r\n\r\n// Конфигурация Firebase\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyCyovJsAQb9WK-i9ltAWUvAoGHAAxvDj2o\",\r\n  authDomain: \"yffjfyuf.firebaseapp.com\",\r\n  projectId: \"yffjfyuf\",\r\n  storageBucket: \"yffjfyuf.appspot.com\",\r\n  messagingSenderId: \"695251726060\",\r\n  appId: \"1:695251726060:web:ee3833579a48ded913ffc9\",\r\n  measurementId: \"G-HRD902XRPX\"\r\n};\r\n\r\n\r\n// Инициализация приложения Firebase\r\nconst app = initializeApp(firebaseConfig);\r\n\r\n// Экспорт объекта Firestore, инициализированного для данного приложения\r\nexport const db = initializeFirestore(app, {\r\n  experimentalForceLongPolling: true, // Опция для использования длинного опроса (long polling) в случае проблем с WebSockets\r\n});\r\n\r\n// Инициализация аутентификации Firebase\r\nexport const auth = initializeAuth(app, {\r\n  persistence: getReactNativePersistence(AsyncStorage), // Настройка сохранения данных аутентификации с использованием AsyncStorage для React Native\r\n});\r\n\r\n// Получение ссылки на хранилище Firebase для данного приложения\r\nexport const storage = getStorage(app);\r\n\r\n// Экспорт объекта приложения Firebase\r\nexport default app;\r\n"],"mappings":"AAAA,OAAOA,YAAY,MAAM,2CAA2C;AAEpE,SACEC,cAAc,EACdC,yBAAyB,QACpB,4BAA4B;AAEnC,SACEC,aAAa,QACR,cAAc;AAErB,SACEC,UAAU,QACL,kBAAkB;AAEzB,SACEC,mBAAmB,QACd,oBAAoB;AAG3B,IAAMC,cAAc,GAAG;EACrBC,MAAM,EAAE,yCAAyC;EACjDC,UAAU,EAAE,0BAA0B;EACtCC,SAAS,EAAE,UAAU;EACrBC,aAAa,EAAE,sBAAsB;EACrCC,iBAAiB,EAAE,cAAc;EACjCC,KAAK,EAAE,2CAA2C;EAClDC,aAAa,EAAE;AACjB,CAAC;AAID,IAAMC,GAAG,GAAGX,aAAa,CAACG,cAAc,CAAC;AAGzC,OAAO,IAAMS,EAAE,GAAGV,mBAAmB,CAACS,GAAG,EAAE;EACzCE,4BAA4B,EAAE;AAChC,CAAC,CAAC;AAGF,OAAO,IAAMC,IAAI,GAAGhB,cAAc,CAACa,GAAG,EAAE;EACtCI,WAAW,EAAEhB,yBAAyB,CAACF,YAAY;AACrD,CAAC,CAAC;AAGF,OAAO,IAAMmB,OAAO,GAAGf,UAAU,CAACU,GAAG,CAAC;AAGtC,eAAeA,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}