{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { Feather } from '@expo/vector-icons';\nimport { authSignOutUser } from \"../../redux/auth/authOperations\";\nimport { getAllPosts } from \"../../redux/posts/postsOperations\";\nimport { LineChart } from 'react-native-chart-kit';\nimport { SelectList } from 'react-native-dropdown-select-list';\nimport { BarChart, PieChart } from 'react-native-chart-kit';\nimport * as SQLite from 'expo-sqlite';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar db = SQLite.openDatabase('test.db');\nvar HomeScreen = function HomeScreen(_ref) {\n  var navigation = _ref.navigation,\n    route = _ref.route;\n  var _useSelector = useSelector(function (state) {\n      return state.posts;\n    }),\n    allPosts = _useSelector.allItems;\n  var _useSelector2 = useSelector(function (state) {\n      return state.auth;\n    }),\n    userPhoto = _useSelector2.userPhoto,\n    email = _useSelector2.email,\n    nickname = _useSelector2.nickname;\n  var dispatch = useDispatch();\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    gpaStatistics = _useState2[0],\n    setGpaStatistics = _useState2[1];\n  var _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    specialityCodesList = _useState4[0],\n    setSpecialityCodesList = _useState4[1];\n  var _React$useState = React.useState(\"\"),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    selectedSpecialityCode = _React$useState2[0],\n    setSelectedSpecialityCode = _React$useState2[1];\n  var _useState5 = useState(null),\n    _useState6 = _slicedToArray(_useState5, 2),\n    coursesList = _useState6[0],\n    setCoursesList = _useState6[1];\n  var _useState7 = useState(\"\"),\n    _useState8 = _slicedToArray(_useState7, 2),\n    selectedCourse = _useState8[0],\n    setSelectedCourse = _useState8[1];\n  var _useState9 = useState(null),\n    _useState10 = _slicedToArray(_useState9, 2),\n    iinList = _useState10[0],\n    setIinList = _useState10[1];\n  var _useState11 = useState(\"\"),\n    _useState12 = _slicedToArray(_useState11, 2),\n    selectedIin = _useState12[0],\n    setSelectedIin = _useState12[1];\n  var _useState13 = useState(null),\n    _useState14 = _slicedToArray(_useState13, 2),\n    paymentFormList = _useState14[0],\n    setPaymentFormList = _useState14[1];\n  var _useState15 = useState(\"\"),\n    _useState16 = _slicedToArray(_useState15, 2),\n    selectedPaymentForm = _useState16[0],\n    setSelectedPaymentForm = _useState16[1];\n  var _useState17 = useState({}),\n    _useState18 = _slicedToArray(_useState17, 2),\n    chartData = _useState18[0],\n    setChartData = _useState18[1];\n  var _useState19 = useState([]),\n    _useState20 = _slicedToArray(_useState19, 2),\n    educationLevelData = _useState20[0],\n    setEducationLevelData = _useState20[1];\n  useEffect(function () {\n    dispatch(getAllPosts());\n    getSemesterGpaStatistics();\n  }, []);\n  var signOut = function signOut() {\n    dispatch(authSignOutUser());\n  };\n  var getAllSpecialtyCodes = function getAllSpecialtyCodes() {\n    return new Promise(function (resolve, reject) {\n      db.transaction(function (tx) {\n        tx.executeSql('SELECT DISTINCT specialty_code FROM Students', [], function (_, result) {\n          var rows = result.rows;\n          var specialtyCodes = [];\n          for (var i = 1; i < rows.length; i++) {\n            specialtyCodes.push(rows.item(i).specialty_code);\n          }\n          resolve(specialtyCodes);\n        }, function (_, error) {\n          reject(error);\n        });\n      });\n    });\n  };\n  var getAllCourses = function getAllCourses() {\n    return new Promise(function (resolve, reject) {\n      db.transaction(function (tx) {\n        tx.executeSql('SELECT DISTINCT course FROM Students', [], function (_, result) {\n          var rows = result.rows;\n          var courses = [];\n          for (var i = 1; i < rows.length; i++) {\n            courses.push(rows.item(i).course);\n          }\n          resolve(courses);\n        }, function (_, error) {\n          reject(error);\n        });\n      });\n    });\n  };\n  var getAllIINs = function getAllIINs() {\n    return new Promise(function (resolve, reject) {\n      db.transaction(function (tx) {\n        tx.executeSql('SELECT DISTINCT iin FROM Students', [], function (_, result) {\n          var rows = result.rows;\n          var iins = [];\n          for (var i = 1; i < rows.length; i++) {\n            iins.push(rows.item(i).iin);\n          }\n          resolve(iins);\n        }, function (_, error) {\n          reject(error);\n        });\n      });\n    });\n  };\n  var getAllPaymentForms = function getAllPaymentForms() {\n    return new Promise(function (resolve, reject) {\n      db.transaction(function (tx) {\n        tx.executeSql('SELECT DISTINCT payment_form FROM Students', [], function (_, result) {\n          var rows = result.rows;\n          var paymentForms = [];\n          for (var i = 0; i < rows.length; i++) {\n            paymentForms.push(rows.item(i).payment_form);\n          }\n          resolve(paymentForms);\n        }, function (_, error) {\n          reject(error);\n        });\n      });\n    });\n  };\n  var GeneralStatistics = function GeneralStatistics() {\n    return _jsxs(View, {\n      style: styles.headerContainer,\n      children: [_jsxs(View, {\n        style: styles.userInfoContainer,\n        children: [_jsx(Image, {\n          style: styles.avatar,\n          source: {\n            uri: userPhoto\n          }\n        }), _jsxs(View, {\n          style: styles.userInfo,\n          children: [_jsx(Text, {\n            style: styles.username,\n            children: nickname\n          }), _jsx(Text, {\n            style: styles.email,\n            children: email\n          })]\n        })]\n      }), gpaStatistics && _jsxs(View, {\n        style: {\n          borderBottomWidth: 1,\n          borderBottomColor: '#E8E8E8',\n          minHeight: 120\n        },\n        children: [_jsx(Text, {\n          style: styles.generalStats.header,\n          children: \"\\u0421\\u0442\\u0430\\u0442\\u0438\\u0441\\u0442\\u0438\\u043A\\u0430 \\u043F\\u043E GPA:\"\n        }), _jsxs(View, {\n          style: styles.generalStats.container,\n          children: [_jsx(View, {\n            style: styles.generalStats.column,\n            children: _jsxs(View, {\n              style: styles.generalStats.item,\n              children: [_jsx(Text, {\n                style: styles.generalStats.text,\n                children: \"\\u041A\\u043E\\u043B\\u0438\\u0447\\u0435\\u0441\\u0442\\u0432\\u043E\"\n              }), _jsx(Text, {\n                style: styles.generalStats.text,\n                children: gpaStatistics.count\n              })]\n            })\n          }), _jsx(View, {\n            style: styles.generalStats.column,\n            children: _jsxs(View, {\n              style: styles.generalStats.item,\n              children: [_jsx(Text, {\n                style: styles.generalStats.text,\n                children: \"\\u0421\\u0440\\u0435\\u0434\\u043D\\u0435\\u0435\"\n              }), _jsx(Text, {\n                style: styles.generalStats.text,\n                children: gpaStatistics.average === null ? \"1\" : gpaStatistics.average.toFixed(2)\n              })]\n            })\n          }), _jsx(View, {\n            style: styles.generalStats.column,\n            children: _jsxs(View, {\n              style: styles.generalStats.item,\n              children: [_jsx(Text, {\n                style: styles.generalStats.text,\n                children: \"\\u041C\\u0430\\u043A\\u0441\"\n              }), _jsxs(Text, {\n                style: styles.generalStats.text,\n                children: [\" \", gpaStatistics.maxGpa]\n              })]\n            })\n          })]\n        })]\n      })]\n    });\n  };\n  var getSemesterGpaStatistics = function getSemesterGpaStatistics() {\n    db.transaction(function (tx) {\n      tx.executeSql('SELECT COUNT(semester_gpa) AS count, AVG(semester_gpa) AS average, MAX(semester_gpa) AS maxGpa, MIN(semester_gpa) AS minGpa FROM Students', [], function (_, result) {\n        var rows = result.rows;\n        if (rows.length > 0) {\n          var statistics = rows.item(0);\n          setGpaStatistics(statistics);\n        } else {\n          console.log('Нет данных для вычисления статистики по semester_gpa');\n        }\n      }, function (error) {\n        console.error('Ошибка при выполнении запроса на получение статистики', error);\n      });\n    });\n  };\n  var fetchGradesStatistics = function () {\n    var _ref2 = _asyncToGenerator(function* (course, specialty, discipline, language) {\n      try {\n        var sqlQuery = 'SELECT AVG(total_score) AS averageScore, MAX(total_score) AS maxScore, MIN(total_score) AS minScore ';\n        sqlQuery += 'FROM Students WHERE 1 = 1';\n        if (course) {\n          sqlQuery += ` AND course = ${course}`;\n        }\n        if (specialty) {\n          sqlQuery += ` AND specialty_code = '${specialty}'`;\n        }\n        if (discipline) {\n          sqlQuery += ` AND discipline_code = '${discipline}'`;\n        }\n        if (language) {\n          sqlQuery += ` AND language_of_study = '${language}'`;\n        }\n        var result = yield new Promise(function (resolve, reject) {\n          db.transaction(function (tx) {\n            tx.executeSql(sqlQuery, [], function (_, _ref3) {\n              var rows = _ref3.rows;\n              return resolve(rows);\n            }, function (_, error) {\n              return reject(error);\n            });\n          });\n        });\n        if (result.length > 0) {\n          var statistics = result.item(0);\n          return statistics;\n        } else {\n          console.log('Нет данных для статистики по предметам');\n          return null;\n        }\n      } catch (error) {\n        console.error('Ошибка при получении статистики:', error);\n        return null;\n      }\n    });\n    return function fetchGradesStatistics(_x, _x2, _x3, _x4) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var getIinCountByCourse = function getIinCountByCourse() {\n    return new Promise(function (resolve, reject) {\n      db.transaction(function (tx) {\n        tx.executeSql('SELECT course, COUNT(DISTINCT iin) AS iin_count FROM Students GROUP BY course', [], function (_, result) {\n          var rows = result.rows;\n          var iinCountByCourse = {};\n          for (var i = 0; i < rows.length - 1; i++) {\n            iinCountByCourse[rows.item(i).course] = rows.item(i).iin_count;\n          }\n          resolve(iinCountByCourse);\n        }, function (_, error) {\n          reject(error);\n        });\n      });\n    });\n  };\n  var getEducationLevelStatistics = function getEducationLevelStatistics() {\n    return new Promise(function (resolve, reject) {\n      db.transaction(function (tx) {\n        tx.executeSql('SELECT education_level, COUNT(*) AS count FROM Students GROUP BY education_level', [], function (_, result) {\n          var rows = result.rows;\n          var educationLevelStatistics = [];\n          var totalCount = 0;\n          for (var i = 0; i < rows.length; i++) {\n            totalCount += rows.item(i).count;\n          }\n          for (var _i = 1; _i < rows.length; _i++) {\n            var percentage = Math.round(rows.item(_i).count / totalCount * 100);\n            educationLevelStatistics.push({\n              label: rows.item(_i).education_level,\n              percentage: percentage\n            });\n          }\n          resolve(educationLevelStatistics);\n        }, function (_, error) {\n          reject(error);\n        });\n      });\n    });\n  };\n  useEffect(function () {\n    getAllSpecialtyCodes().then(function (specialtyCodes) {\n      setSpecialityCodesList(specialtyCodes);\n    }).catch(function (error) {\n      console.error('Ошибка при получении списка specialty_code:', error);\n    });\n    getAllCourses().then(function (courses) {\n      setCoursesList(courses);\n    }).catch(function (error) {\n      console.error('Ошибка при получении списка курсов:', error);\n    });\n    getAllIINs().then(function (iins) {\n      setIinList(iins);\n    }).catch(function (error) {\n      console.error('Ошибка при получении списка IIN:', error);\n    });\n    getAllPaymentForms().then(function (paymentForms) {\n      setPaymentFormList(paymentForms);\n    }).catch(function (error) {\n      console.error('Ошибка при получении списка payment_form:', error);\n    });\n    getIinCountByCourse().then(function (iinCountByCourse) {\n      var courses = Object.keys(iinCountByCourse);\n      var iinCounts = Object.values(iinCountByCourse);\n      setChartData({\n        labels: courses,\n        datasets: [{\n          data: iinCounts\n        }]\n      });\n    }).catch(function (error) {\n      console.error('Ошибка при получении статистики по IIN по курсу:', error);\n    });\n    getEducationLevelStatistics().then(function (statistics) {\n      setEducationLevelData(statistics);\n    }).catch(function (error) {\n      console.error('Ошибка при получении статистики по уровню образования:', error);\n    });\n  }, []);\n  var getRandomColor = function getRandomColor() {\n    var letters = '0123456789ABCDEF';\n    var color = '#';\n    for (var i = 0; i < 6; i++) {\n      color += letters[Math.floor(Math.random() * 16)];\n    }\n    return color;\n  };\n  return _jsx(_Fragment, {\n    children: _jsxs(SafeAreaView, {\n      style: styles.container,\n      children: [_jsxs(View, {\n        style: styles.header,\n        children: [_jsx(Text, {\n          style: styles.headerTitle,\n          children: \"\\u0421\\u0442\\u0430\\u0442\\u0438\\u0441\\u0442\\u0438\\u043A\\u0430\"\n        }), _jsx(TouchableOpacity, {\n          onPress: signOut,\n          children: _jsx(Feather, {\n            name: \"log-out\",\n            size: 24,\n            color: \"#BDBDBD\"\n          })\n        })]\n      }), _jsxs(ScrollView, {\n        children: [_jsx(GeneralStatistics, {}), _jsxs(View, {\n          style: {\n            flex: 1,\n            flexDirection: 'column',\n            rowGap: 20,\n            padding: 30\n          },\n          children: [_jsxs(View, {\n            children: [_jsx(Text, {\n              style: {\n                fontSize: 18,\n                marginBottom: 10\n              },\n              children: \"\\u041A\\u043E\\u0434 \\u0441\\u043F\\u0435\\u0446\\u0438\\u0430\\u043B\\u044C\\u043D\\u043E\\u0441\\u0442\\u0438\"\n            }), _jsx(SelectList, {\n              setSelected: function setSelected(val) {\n                return setSelectedSpecialityCode(val);\n              },\n              data: specialityCodesList,\n              save: \"value\",\n              placeholder: \"\\u0412\\u0441\\u0435\",\n              searchPlaceholder: \"\\u041F\\u043E\\u0438\\u0441\\u043A\"\n            })]\n          }), _jsxs(View, {\n            children: [_jsx(Text, {\n              style: {\n                fontSize: 18,\n                marginBottom: 10\n              },\n              children: \"\\u041A\\u0443\\u0440\\u0441\"\n            }), _jsx(SelectList, {\n              setSelected: function setSelected(val) {\n                return setSelectedCourse(val);\n              },\n              data: coursesList,\n              save: \"value\",\n              placeholder: \"\\u041A\\u0443\\u0440\\u0441\",\n              search: false\n            })]\n          }), _jsxs(View, {\n            children: [_jsx(Text, {\n              style: {\n                fontSize: 18,\n                marginBottom: 10\n              },\n              children: \"\\u0418\\u0418\\u041D \\u0441\\u0442\\u0443\\u0434\\u0435\\u043D\\u0442\\u0430\"\n            }), _jsx(SelectList, {\n              setSelected: function setSelected(val) {\n                return setSelectedIin(val);\n              },\n              data: iinList,\n              save: \"value\",\n              placeholder: \"\\u0418\\u0418\\u041D\",\n              searchPlaceholder: \"\\u041F\\u043E\\u0438\\u0441\\u043A \\u043F\\u043E \\u0418\\u0418\\u041D\"\n            })]\n          }), _jsxs(View, {\n            children: [_jsx(Text, {\n              style: {\n                fontSize: 18,\n                marginBottom: 10\n              },\n              children: \"\\u0424\\u043E\\u0440\\u043C\\u0430 \\u043E\\u043F\\u043B\\u0430\\u0442\\u044B\"\n            }), _jsx(SelectList, {\n              setSelected: function setSelected(val) {\n                return setSelectedPaymentForm(val);\n              },\n              data: paymentFormList,\n              save: \"value\",\n              placeholder: \"\\u0424\\u043E\\u0440\\u043C\\u0430 \\u043E\\u043F\\u043B\\u0430\\u0442\\u044B\",\n              search: false\n            })]\n          }), chartData && chartData.labels && chartData.datasets && _jsxs(View, {\n            children: [_jsx(Text, {\n              style: {\n                paddingBottom: 15,\n                fontWeight: 600,\n                textAlign: 'center',\n                fontSize: 20\n              },\n              children: \"\\u0421\\u0442\\u0443\\u0434\\u0435\\u043D\\u0442\\u044B \\u0432 \\u0440\\u0430\\u0437\\u0440\\u0435\\u0437\\u0435 \\u043F\\u043E \\u043A\\u0443\\u0440\\u0441\\u0430\\u043C \\u043E\\u0431\\u0443\\u0447\\u0435\\u043D\\u0438\\u044F\"\n            }), _jsx(BarChart, {\n              data: chartData,\n              width: 320,\n              height: 220,\n              yAxisSuffix: \"\",\n              yAxisLabel: \"\",\n              chartConfig: {\n                backgroundGradientFrom: '#fff',\n                backgroundGradientTo: '#fff',\n                decimalPlaces: 0,\n                color: function color() {\n                  var opacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n                  return `rgba(0, 173, 230, ${opacity})`;\n                },\n                style: {\n                  borderRadius: 16\n                },\n                barPercentage: 2.5,\n                propsForVerticalLabels: {\n                  fontSize: 10\n                },\n                propsForLabels: {\n                  fontSize: 10\n                },\n                propsForBackgroundLines: {\n                  stroke: '#E8E8E8'\n                },\n                propsForDots: {\n                  r: '0',\n                  strokeWidth: '2',\n                  stroke: '#ffa726'\n                }\n              },\n              verticalLabelRotation: 30,\n              fromZero: true\n            })]\n          }), educationLevelData && _jsxs(View, {\n            children: [_jsx(Text, {\n              style: {\n                paddingBottom: 8,\n                fontWeight: 600,\n                textAlign: 'center',\n                fontSize: 20\n              },\n              children: \"\\u0421\\u0442\\u0443\\u0434\\u0435\\u043D\\u0442\\u044B \\u0432 \\u0440\\u0430\\u0437\\u0440\\u0435\\u0437\\u0435 \\u0443\\u0440\\u043E\\u0432\\u043D\\u044F \\u043E\\u0431\\u0443\\u0447\\u0435\\u043D\\u0438\\u044F\"\n            }), _jsx(PieChart, {\n              data: educationLevelData.map(function (item) {\n                return {\n                  name: item.label,\n                  population: item.percentage,\n                  color: getRandomColor(),\n                  legendFontColor: '#7F7F7F',\n                  legendFontSize: 13\n                };\n              }),\n              width: 340,\n              height: 220,\n              chartConfig: {\n                backgroundGradientFrom: '#fff',\n                backgroundGradientTo: '#fff',\n                color: function color() {\n                  var opacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n                  return `rgba(0, 173, 280, ${opacity})`;\n                }\n              },\n              accessor: \"population\",\n              backgroundColor: \"transparent\",\n              paddingLeft: \"6\",\n              absolute: true\n            })]\n          })]\n        })]\n      })]\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#FFFFFF'\n  },\n  header: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    paddingHorizontal: 16,\n    paddingVertical: 10,\n    borderBottomWidth: 1,\n    borderBottomColor: '#E8E8E8'\n  },\n  headerTitle: {\n    fontFamily: 'Roboto-Medium',\n    fontSize: 20,\n    lineHeight: 24,\n    color: '#212121'\n  },\n  headerRightIcon: {\n    paddingHorizontal: 16\n  },\n  headerRightIconText: {\n    fontFamily: 'Roboto-Regular',\n    fontSize: 16,\n    lineHeight: 19,\n    color: '#BDBDBD'\n  },\n  headerContainer: {\n    paddingTop: 10\n  },\n  userInfoContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 10,\n    paddingBottom: 8,\n    borderBottomWidth: 1,\n    borderBottomColor: '#E8E8E8',\n    width: '100%'\n  },\n  avatar: {\n    width: 50,\n    height: 50,\n    marginLeft: 20,\n    borderRadius: 25,\n    backgroundColor: '#BDBDBD'\n  },\n  userInfo: {\n    marginLeft: 12\n  },\n  username: {\n    fontFamily: 'Roboto-Medium',\n    fontSize: 16,\n    lineHeight: 19,\n    color: '#212121'\n  },\n  email: {\n    fontFamily: 'Roboto-Regular',\n    fontSize: 14,\n    lineHeight: 16,\n    color: '#757575'\n  },\n  separator: {\n    height: 1,\n    backgroundColor: '#E8E8E8',\n    marginBottom: 20\n  },\n  statisticsText: {\n    fontFamily: 'Roboto-Medium',\n    fontSize: 16,\n    lineHeight: 19,\n    color: '#212121',\n    marginBottom: 10\n  },\n  generalStats: {\n    header: {\n      fontSize: 22,\n      lineHeight: 26,\n      textAlign: 'center',\n      marginBottom: 10\n    },\n    container: {\n      flex: 1,\n      flexDirection: 'row',\n      padding: 5\n    },\n    column: {\n      flex: 1,\n      alignItems: 'center',\n      height: '100%'\n    },\n    item: {\n      width: '90%',\n      marginVertical: 10,\n      padding: 10,\n      borderWidth: 1,\n      borderColor: '#ccc',\n      height: 50,\n      borderRadius: 14\n    },\n    text: {}\n  }\n});\nexport default HomeScreen;","map":{"version":3,"names":["React","useEffect","useState","useDispatch","useSelector","View","Text","StyleSheet","TouchableOpacity","FlatList","Image","SafeAreaView","ScrollView","Feather","authSignOutUser","getAllPosts","LineChart","SelectList","BarChart","PieChart","SQLite","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","db","openDatabase","HomeScreen","_ref","navigation","route","_useSelector","state","posts","allPosts","allItems","_useSelector2","auth","userPhoto","email","nickname","dispatch","_useState","_useState2","_slicedToArray","gpaStatistics","setGpaStatistics","_useState3","_useState4","specialityCodesList","setSpecialityCodesList","_React$useState","_React$useState2","selectedSpecialityCode","setSelectedSpecialityCode","_useState5","_useState6","coursesList","setCoursesList","_useState7","_useState8","selectedCourse","setSelectedCourse","_useState9","_useState10","iinList","setIinList","_useState11","_useState12","selectedIin","setSelectedIin","_useState13","_useState14","paymentFormList","setPaymentFormList","_useState15","_useState16","selectedPaymentForm","setSelectedPaymentForm","_useState17","_useState18","chartData","setChartData","_useState19","_useState20","educationLevelData","setEducationLevelData","getSemesterGpaStatistics","signOut","getAllSpecialtyCodes","Promise","resolve","reject","transaction","tx","executeSql","_","result","rows","specialtyCodes","i","length","push","item","specialty_code","error","getAllCourses","courses","course","getAllIINs","iins","iin","getAllPaymentForms","paymentForms","payment_form","GeneralStatistics","style","styles","headerContainer","children","userInfoContainer","avatar","source","uri","userInfo","username","borderBottomWidth","borderBottomColor","minHeight","generalStats","header","container","column","text","count","average","toFixed","maxGpa","statistics","console","log","fetchGradesStatistics","_ref2","_asyncToGenerator","specialty","discipline","language","sqlQuery","_ref3","_x","_x2","_x3","_x4","apply","arguments","getIinCountByCourse","iinCountByCourse","iin_count","getEducationLevelStatistics","educationLevelStatistics","totalCount","percentage","Math","round","label","education_level","then","catch","Object","keys","iinCounts","values","labels","datasets","data","getRandomColor","letters","color","floor","random","headerTitle","onPress","name","size","flex","flexDirection","rowGap","padding","fontSize","marginBottom","setSelected","val","save","placeholder","searchPlaceholder","search","paddingBottom","fontWeight","textAlign","width","height","yAxisSuffix","yAxisLabel","chartConfig","backgroundGradientFrom","backgroundGradientTo","decimalPlaces","opacity","undefined","borderRadius","barPercentage","propsForVerticalLabels","propsForLabels","propsForBackgroundLines","stroke","propsForDots","r","strokeWidth","verticalLabelRotation","fromZero","map","population","legendFontColor","legendFontSize","accessor","backgroundColor","paddingLeft","absolute","create","alignItems","justifyContent","paddingHorizontal","paddingVertical","fontFamily","lineHeight","headerRightIcon","headerRightIconText","paddingTop","marginLeft","separator","statisticsText","marginVertical","borderWidth","borderColor"],"sources":["C:/Users/Meruem/Desktop/diplom_project/screens/nestedScreen/HomeScreen.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { View, Text, StyleSheet, TouchableOpacity, FlatList, Image, SafeAreaView,ScrollView } from \"react-native\";\r\nimport { Feather } from '@expo/vector-icons';\r\nimport { authSignOutUser } from \"../../redux/auth/authOperations\";\r\nimport { getAllPosts } from \"../../redux/posts/postsOperations\";\r\nimport { LineChart } from 'react-native-chart-kit';\r\nimport { SelectList } from 'react-native-dropdown-select-list'\r\nimport { BarChart, PieChart} from 'react-native-chart-kit';\r\n\r\nimport * as SQLite from 'expo-sqlite';\r\nconst db = SQLite.openDatabase('test.db');\r\n\r\nconst HomeScreen = ({ navigation, route }) => {\r\n    const { allItems: allPosts } = useSelector((state) => state.posts);\r\n    const { userPhoto, email, nickname } = useSelector((state) => state.auth);\r\n    const dispatch = useDispatch();\r\n    const [gpaStatistics, setGpaStatistics] = useState(null); // Статистика GPA\r\n    const [specialityCodesList, setSpecialityCodesList] = useState(null);\r\n    const [selectedSpecialityCode, setSelectedSpecialityCode] = React.useState(\"\");\r\n    const [coursesList, setCoursesList] = useState(null);\r\n    const [selectedCourse, setSelectedCourse] = useState(\"\");\r\n    const [iinList, setIinList] = useState(null);\r\n    const [selectedIin, setSelectedIin] = useState(\"\");\r\n    const [paymentFormList, setPaymentFormList] = useState(null);\r\n    const [selectedPaymentForm, setSelectedPaymentForm] = useState(\"\");\r\n    const [chartData, setChartData] = useState({});\r\n    const [educationLevelData, setEducationLevelData] = useState([]);\r\n\r\n    useEffect(() => {\r\n        dispatch(getAllPosts());\r\n        getSemesterGpaStatistics(); // Получаем статистику при загрузке компонента\r\n    }, []);\r\n\r\n    const signOut = () => {\r\n        dispatch(authSignOutUser());\r\n    };\r\n    const getAllSpecialtyCodes = () => {\r\n        return new Promise((resolve, reject) => {\r\n            db.transaction(tx => {\r\n                tx.executeSql(\r\n                    'SELECT DISTINCT specialty_code FROM Students',\r\n                    [],\r\n                    (_, result) => {\r\n                        const { rows } = result;\r\n                        const specialtyCodes = [];\r\n                        for (let i = 1; i < rows.length; i++) {\r\n                            specialtyCodes.push(rows.item(i).specialty_code);\r\n                        }\r\n                        resolve(specialtyCodes);\r\n                    },\r\n                    (_, error) => {\r\n                        reject(error);\r\n                    }\r\n                );\r\n            });\r\n        });\r\n    };\r\n\r\n    const getAllCourses = () => {\r\n        return new Promise((resolve, reject) => {\r\n            db.transaction(tx => {\r\n                tx.executeSql(\r\n                    'SELECT DISTINCT course FROM Students',\r\n                    [],\r\n                    (_, result) => {\r\n                        const { rows } = result;\r\n                        const courses = [];\r\n                        for (let i = 1; i < rows.length; i++) {\r\n                            courses.push(rows.item(i).course);\r\n                        }\r\n                        resolve(courses);\r\n                    },\r\n                    (_, error) => {\r\n                        reject(error);\r\n                    }\r\n                );\r\n            });\r\n        });\r\n    };\r\n\r\n    const getAllIINs = () => {\r\n        return new Promise((resolve, reject) => {\r\n            db.transaction(tx => {\r\n                tx.executeSql(\r\n                    'SELECT DISTINCT iin FROM Students',\r\n                    [],\r\n                    (_, result) => {\r\n                        const { rows } = result;\r\n                        const iins = [];\r\n                        for (let i = 1; i < rows.length; i++) {\r\n                            iins.push(rows.item(i).iin);\r\n                        }\r\n                        resolve(iins);\r\n                    },\r\n                    (_, error) => {\r\n                        reject(error);\r\n                    }\r\n                );\r\n            });\r\n        });\r\n    };\r\n\r\n    const getAllPaymentForms = () => {\r\n        return new Promise((resolve, reject) => {\r\n            db.transaction(tx => {\r\n                tx.executeSql(\r\n                    'SELECT DISTINCT payment_form FROM Students',\r\n                    [],\r\n                    (_, result) => {\r\n                        const { rows } = result;\r\n                        const paymentForms = [];\r\n                        for (let i = 0; i < rows.length; i++) {\r\n                            paymentForms.push(rows.item(i).payment_form);\r\n                        }\r\n                        resolve(paymentForms);\r\n                    },\r\n                    (_, error) => {\r\n                        reject(error);\r\n                    }\r\n                );\r\n            });\r\n        });\r\n    };\r\n\r\n    // getAllSpecialtyCodes()\r\n    //     .then(specialtyCodes => {\r\n    //         console.log('Список всех specialty_code:', specialtyCodes);\r\n    //         setSpecialityCodesList(specialtyCodes);\r\n    //     })\r\n    //     .catch(error => {\r\n    //         console.error('Ошибка при получении списка specialty_code:', error);\r\n    //     });\r\n\r\n    // const renderItem = ({ item }) => (\r\n    //     <PublicPosts item={item} navigation={navigation} />\r\n    // );\r\n\r\n    const GeneralStatistics = () => {\r\n        return (\r\n            <View style={styles.headerContainer}>\r\n                <View style={styles.userInfoContainer}>\r\n                    <Image style={styles.avatar} source={{ uri: userPhoto }} />\r\n                    <View style={styles.userInfo}>\r\n                        <Text style={styles.username}>{nickname}</Text>\r\n                        <Text style={styles.email}>{email}</Text>\r\n                    </View>\r\n                </View>\r\n                {gpaStatistics && (\r\n                    <View style={{borderBottomWidth: 1, borderBottomColor: '#E8E8E8', minHeight: 120}}>\r\n                        <Text style={styles.generalStats.header}>Статистика по GPA:</Text>\r\n                        <View style={styles.generalStats.container}>\r\n                            <View style={styles.generalStats.column}>\r\n                                <View style={styles.generalStats.item}>\r\n                                    <Text style={styles.generalStats.text}>Количество</Text>\r\n                                    <Text style={styles.generalStats.text}>{gpaStatistics.count}</Text>\r\n                                </View>\r\n                            </View>\r\n                            <View style={styles.generalStats.column}>\r\n                                <View style={styles.generalStats.item}>\r\n                                    <Text style={styles.generalStats.text}>Среднее</Text>\r\n                                    <Text style={styles.generalStats.text}>\r\n                                        {gpaStatistics.average === null ? \"1\" : gpaStatistics.average.toFixed(2)}\r\n                                    </Text>\r\n                                </View>\r\n                            </View>\r\n                            <View style={styles.generalStats.column}>\r\n                                <View style={styles.generalStats.item}>\r\n                                    <Text style={styles.generalStats.text}>Макс</Text>\r\n                                    <Text style={styles.generalStats.text}> {gpaStatistics.maxGpa}</Text>\r\n                                </View>\r\n                            </View>\r\n                        </View>\r\n                    </View>\r\n                )}\r\n\r\n            </View>\r\n\r\n        )\r\n    }\r\n\r\n    const getSemesterGpaStatistics = () => {\r\n        db.transaction(tx => {\r\n            tx.executeSql(\r\n                'SELECT COUNT(semester_gpa) AS count, AVG(semester_gpa) AS average, MAX(semester_gpa) AS maxGpa, MIN(semester_gpa) AS minGpa FROM Students',\r\n                [],\r\n                (_, result) => {\r\n                    const { rows } = result;\r\n                    if (rows.length > 0) {\r\n                        const statistics = rows.item(0);\r\n                        setGpaStatistics(statistics); // Обновляем состояние с полученной статистикой\r\n                    } else {\r\n                        console.log('Нет данных для вычисления статистики по semester_gpa');\r\n                    }\r\n                },\r\n                error => {\r\n                    console.error('Ошибка при выполнении запроса на получение статистики', error);\r\n                }\r\n            );\r\n        });\r\n    };\r\n    const fetchGradesStatistics = async (course, specialty, discipline, language) => {\r\n        try {\r\n            // Формируем SQL-запрос на основе выбранных параметров\r\n            let sqlQuery = 'SELECT AVG(total_score) AS averageScore, MAX(total_score) AS maxScore, MIN(total_score) AS minScore ';\r\n            sqlQuery += 'FROM Students WHERE 1 = 1'; // Начальное условие\r\n\r\n            // Добавляем условия выборки в SQL-запрос в зависимости от переданных параметров\r\n            if (course) {\r\n                sqlQuery += ` AND course = ${course}`;\r\n            }\r\n            if (specialty) {\r\n                sqlQuery += ` AND specialty_code = '${specialty}'`;\r\n            }\r\n            if (discipline) {\r\n                sqlQuery += ` AND discipline_code = '${discipline}'`;\r\n            }\r\n            if (language) {\r\n                sqlQuery += ` AND language_of_study = '${language}'`;\r\n            }\r\n\r\n            // Выполняем SQL-запрос к базе данных\r\n            const result = await new Promise((resolve, reject) => {\r\n                db.transaction(tx => {\r\n                    tx.executeSql(\r\n                        sqlQuery,\r\n                        [],\r\n                        (_, { rows }) => resolve(rows),\r\n                        (_, error) => reject(error)\r\n                    );\r\n                });\r\n            });\r\n\r\n            // Проверяем, получены ли данные\r\n            if (result.length > 0) {\r\n                const statistics = result.item(0);\r\n                return statistics;\r\n            } else {\r\n                console.log('Нет данных для статистики по предметам');\r\n                return null;\r\n            }\r\n        } catch (error) {\r\n            console.error('Ошибка при получении статистики:', error);\r\n            // Обработка ошибки, например, вывод сообщения об ошибке на экран\r\n            return null;\r\n        }\r\n    };\r\n    const getIinCountByCourse = () => {\r\n        return new Promise((resolve, reject) => {\r\n            db.transaction(tx => {\r\n                tx.executeSql(\r\n                    'SELECT course, COUNT(DISTINCT iin) AS iin_count FROM Students GROUP BY course',\r\n                    [],\r\n                    (_, result) => {\r\n                        const { rows } = result;\r\n                        const iinCountByCourse = {};\r\n                        for (let i = 0; i < rows.length-1; i++) {\r\n                            iinCountByCourse[rows.item(i).course] = rows.item(i).iin_count;\r\n                        }\r\n                        resolve(iinCountByCourse);\r\n                    },\r\n                    (_, error) => {\r\n                        reject(error);\r\n                    }\r\n                );\r\n            });\r\n        });\r\n    };\r\n    const getEducationLevelStatistics = () => {\r\n        return new Promise((resolve, reject) => {\r\n            db.transaction(tx => {\r\n                tx.executeSql(\r\n                    'SELECT education_level, COUNT(*) AS count FROM Students GROUP BY education_level',\r\n                    [],\r\n                    (_, result) => {\r\n                        const { rows } = result;\r\n                        const educationLevelStatistics = [];\r\n                        let totalCount = 0;\r\n                        for (let i = 0; i < rows.length; i++) {\r\n                            totalCount += rows.item(i).count;\r\n                        }\r\n                        for (let i = 1; i < rows.length; i++) {\r\n                            const percentage = Math.round((rows.item(i).count / totalCount) * 100); // Используем Math.round() для округления\r\n                            educationLevelStatistics.push({ label: rows.item(i).education_level, percentage });\r\n                        }\r\n                        resolve(educationLevelStatistics);\r\n                    },\r\n                    (_, error) => {\r\n                        reject(error);\r\n                    }\r\n                );\r\n            });\r\n        });\r\n    };\r\n\r\n\r\n    useEffect(()=>{\r\n        getAllSpecialtyCodes()\r\n        .then(specialtyCodes => {\r\n            setSpecialityCodesList(specialtyCodes);\r\n        })\r\n        .catch(error => {\r\n            console.error('Ошибка при получении списка specialty_code:', error);\r\n        });\r\n\r\n        getAllCourses()\r\n            .then(courses => {\r\n                setCoursesList(courses);\r\n            })\r\n            .catch(error => {\r\n                console.error('Ошибка при получении списка курсов:', error);\r\n            });\r\n\r\n        getAllIINs()\r\n            .then(iins => {\r\n                setIinList(iins)\r\n            })\r\n            .catch(error => {\r\n                console.error('Ошибка при получении списка IIN:', error);\r\n            });\r\n\r\n        getAllPaymentForms()\r\n            .then(paymentForms => {\r\n                setPaymentFormList(paymentForms)\r\n            })\r\n            .catch(error => {\r\n                console.error('Ошибка при получении списка payment_form:', error);\r\n            });\r\n\r\n        getIinCountByCourse()\r\n            .then(iinCountByCourse => {\r\n                const courses = Object.keys(iinCountByCourse);\r\n                const iinCounts = Object.values(iinCountByCourse);\r\n                setChartData({ labels: courses, datasets: [{ data: iinCounts }] });\r\n            })\r\n            .catch(error => {\r\n                console.error('Ошибка при получении статистики по IIN по курсу:', error);\r\n            });\r\n\r\n        getEducationLevelStatistics()\r\n            .then(statistics => {\r\n                setEducationLevelData(statistics);\r\n            })\r\n            .catch(error => {\r\n                console.error('Ошибка при получении статистики по уровню образования:', error);\r\n            });\r\n\r\n    },[]);\r\n    const getRandomColor = () => {\r\n        const letters = '0123456789ABCDEF';\r\n        let color = '#';\r\n        for (let i = 0; i < 6; i++) {\r\n            color += letters[Math.floor(Math.random() * 16)];\r\n        }\r\n        return color;\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <SafeAreaView style={styles.container}>\r\n                <View style={styles.header}>\r\n                    <Text style={styles.headerTitle}>Статистика</Text>\r\n                    <TouchableOpacity onPress={signOut}>\r\n                        <Feather name=\"log-out\" size={24} color=\"#BDBDBD\" />\r\n                    </TouchableOpacity>\r\n                </View>\r\n                <ScrollView>\r\n                <GeneralStatistics />\r\n                <View style={{flex: 1, flexDirection: 'column', rowGap: 20, padding: 30}}>\r\n                    <View>\r\n                        <Text style={{fontSize: 18, marginBottom: 10}}>Код специальности</Text>\r\n                        <SelectList\r\n                            setSelected={(val) => setSelectedSpecialityCode(val)}\r\n                            data={specialityCodesList}\r\n                            save=\"value\"\r\n                            placeholder=\"Все\"\r\n                            searchPlaceholder=\"Поиск\"\r\n                        />\r\n                    </View>\r\n                    <View>\r\n                        <Text style={{fontSize: 18, marginBottom: 10}}>Курс</Text>\r\n                        <SelectList\r\n                            setSelected={(val) => setSelectedCourse(val)}\r\n                            data={coursesList}\r\n                            save=\"value\"\r\n                            placeholder=\"Курс\"\r\n                            search={false}\r\n                        />\r\n                    </View>\r\n                    <View>\r\n                        <Text style={{fontSize: 18, marginBottom: 10}}>ИИН студента</Text>\r\n                        <SelectList\r\n                            setSelected={(val) => setSelectedIin(val)}\r\n                            data={iinList}\r\n                            save=\"value\"\r\n                            placeholder=\"ИИН\"\r\n                            searchPlaceholder=\"Поиск по ИИН\"\r\n                        />\r\n                    </View>\r\n                    <View>\r\n                        <Text style={{fontSize: 18, marginBottom: 10}}>Форма оплаты</Text>\r\n                        <SelectList\r\n                            setSelected={(val) => setSelectedPaymentForm(val)}\r\n                            data={paymentFormList}\r\n                            save=\"value\"\r\n                            placeholder=\"Форма оплаты\"\r\n                            search={false}\r\n                        />\r\n                    </View>\r\n                    {chartData && chartData.labels && chartData.datasets && (\r\n                        <View>\r\n                        <Text style={{paddingBottom: 15, fontWeight: 600, textAlign: 'center', fontSize: 20}}>Студенты в разрезе по курсам обучения</Text>\r\n                        <BarChart\r\n                            data={chartData}\r\n                            width={320}\r\n                            height={220}\r\n                            yAxisSuffix=\"\"\r\n                            yAxisLabel=\"\"\r\n                            chartConfig={\r\n                                {\r\n                                    backgroundGradientFrom: '#fff',\r\n                                    backgroundGradientTo: '#fff',\r\n                                    decimalPlaces: 0,\r\n                                    color: (opacity = 1) => `rgba(0, 173, 230, ${opacity})`, // Цвет столбцов\r\n                                    style: {\r\n                                        borderRadius: 16,\r\n                                    },\r\n                                    barPercentage: 2.5, // Относительная ширина столбцов\r\n                                    propsForVerticalLabels: {\r\n                                        fontSize: 10,\r\n                                    },\r\n                                    propsForLabels: {\r\n                                        fontSize: 10,\r\n                                    },\r\n                                    propsForBackgroundLines: {\r\n                                        stroke: '#E8E8E8',\r\n                                    },\r\n                                    propsForDots: {\r\n                                        r: '0',\r\n                                        strokeWidth: '2',\r\n                                        stroke: '#ffa726',\r\n                                    },\r\n\r\n                                }\r\n                            }\r\n                            verticalLabelRotation={30}\r\n                            fromZero={true}\r\n                        />\r\n                        </View>\r\n                    )}\r\n                    {educationLevelData &&(\r\n                        <View>\r\n                        <Text style={{paddingBottom: 8, fontWeight: 600, textAlign: 'center',  fontSize: 20}}>Студенты в разрезе уровня обучения</Text>\r\n                        <PieChart\r\n                            data={educationLevelData.map(item => ({\r\n                                name: item.label,\r\n                                population: item.percentage,\r\n                                color: getRandomColor(), // Функция для генерации случайного цвета\r\n                                legendFontColor: '#7F7F7F',\r\n                                legendFontSize: 13,\r\n                            }))}\r\n                            width={340}\r\n                            height={220}\r\n                            chartConfig={{\r\n                                backgroundGradientFrom: '#fff',\r\n                                backgroundGradientTo: '#fff',\r\n                                color: (opacity = 1) => `rgba(0, 173, 280, ${opacity})`, // Цвет текста\r\n                            }}\r\n                            accessor={\"population\"}\r\n                            backgroundColor=\"transparent\"\r\n                            paddingLeft=\"6\"\r\n                            absolute\r\n                        />\r\n                        </View>\r\n\r\n                    )}\r\n                </View>\r\n                </ScrollView>\r\n                {/*<FlatList*/}\r\n                {/*    data={allPosts}*/}\r\n                {/*    renderItem={renderItem}*/}\r\n                {/*    keyExtractor={(item) => item.id}*/}\r\n                {/*    showsVerticalScrollIndicator={false}*/}\r\n                {/*/>*/}\r\n            </SafeAreaView>\r\n        </>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        backgroundColor: '#FFFFFF'\r\n    },\r\n    header: {\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        paddingHorizontal: 16,\r\n        paddingVertical: 10,\r\n        borderBottomWidth: 1,\r\n        borderBottomColor: '#E8E8E8',\r\n    },\r\n    headerTitle: {\r\n        fontFamily: 'Roboto-Medium',\r\n        fontSize: 20,\r\n        lineHeight: 24,\r\n        color: '#212121',\r\n    },\r\n    headerRightIcon: {\r\n        paddingHorizontal: 16,\r\n    },\r\n    headerRightIconText: {\r\n        fontFamily: 'Roboto-Regular',\r\n        fontSize: 16,\r\n        lineHeight: 19,\r\n        color: '#BDBDBD',\r\n    },\r\n    headerContainer: {\r\n        paddingTop: 10,\r\n        // paddingHorizontal: 16\r\n\r\n    },\r\n    userInfoContainer: {\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        marginBottom: 10,\r\n        paddingBottom: 8,\r\n        borderBottomWidth: 1,\r\n        borderBottomColor: '#E8E8E8',\r\n        width: '100%',\r\n    },\r\n    avatar: {\r\n        width: 50,\r\n        height: 50,\r\n        marginLeft: 20,\r\n        borderRadius: 25,\r\n        backgroundColor: '#BDBDBD',\r\n    },\r\n    userInfo: {\r\n        marginLeft: 12,\r\n    },\r\n    username: {\r\n        fontFamily: 'Roboto-Medium',\r\n        fontSize: 16,\r\n        lineHeight: 19,\r\n        color: '#212121',\r\n    },\r\n    email: {\r\n        fontFamily: 'Roboto-Regular',\r\n        fontSize: 14,\r\n        lineHeight: 16,\r\n        color: '#757575',\r\n    },\r\n    separator: {\r\n        height: 1,\r\n        backgroundColor: '#E8E8E8',\r\n        marginBottom: 20,\r\n    },\r\n    statisticsText: {\r\n        fontFamily: 'Roboto-Medium',\r\n        fontSize: 16,\r\n        lineHeight: 19,\r\n        color: '#212121',\r\n        marginBottom: 10,\r\n    },\r\n    generalStats: {\r\n        header: {\r\n            fontSize: 22,\r\n            lineHeight: 26,\r\n            textAlign: 'center',\r\n            marginBottom: 10\r\n        },\r\n        container: {\r\n            flex: 1,\r\n            flexDirection: 'row', // Располагаем колонки в ряд\r\n            padding: 5\r\n        },\r\n        column: {\r\n            flex: 1, // Распределение пространства между колонками\r\n            alignItems: 'center', // Выравнивание по центру по горизонтали\r\n            height: '100%'\r\n        },\r\n        item: {\r\n            width: '90%', // Ширина элемента\r\n            marginVertical: 10, // Вертикальный отступ между элементами\r\n            padding: 10,\r\n            borderWidth: 1,\r\n            borderColor: '#ccc',\r\n            height: 50,\r\n            borderRadius: 14\r\n        },\r\n        text: {\r\n        },\r\n    }\r\n\r\n});\r\n\r\nexport default HomeScreen;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}